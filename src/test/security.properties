# ==================================================================================================
# HOST WHITELIST
# ==================================================================================================
# Comma-separated list of hosts to whitelist. I.e., these hosts will not be forced to go through
# the authorization pipeline beyond checking the IP address. This is useful if the admin wants to
# whitelist host(s) used to run commands to manage the Elasticsearch cluster.
elasticsearch.rest.security.whitelist.host : \
  "127.0.0.1"\
  ,"192.168.0.0"\
  ,"192.168.0.1"
# ==================================================================================================
# HTTP METHOD WHITELIST
# ==================================================================================================
# Comma-separated list of HTTP methods to whitelist. HEAD, OPTIONS and GET are generally safe for 
# anonymous access to ES APIs. POST and PUT (i.e. writes) are potentially hazardous and should 
# require access control. DELETE should only be performed by admins.
elasticsearch.rest.security.whitelist.method : HEAD,OPTIONS,GET
# ==================================================================================================
# URL WHITELIST
# ==================================================================================================
# Comma-separated list of URLs to whitelist. Simple regex patterns are supported (e.g. wildcards). 
# Some extra caution should be taken with wildcards so as not to be TOO inclusive. Kibana read-only 
# URLs are whitelisted.
elasticsearch.rest.security.whitelist.url : \
  /_mget.*\
  ,/_msearch.*\
  ,/.*/_field_stats.*\
  ,/.*/index-pattern/_search.*\
  ,/.*/search/_search.*\
  ,/.*/visualization/_search.*\
  ,/.*/dashboard/_search.*\
  ,/.*/_mapping/timelion-sheet.*\
  ,/api/timelion/run.*\
  ,/.*/_search.*\
  ,/.*/_mapping/visualization.*\
  ,/.*/_refresh\
  ,/.kibana.*/index-pattern/.*
# ==================================================================================================
# HTTP BASIC CONFIG
# ==================================================================================================
# Comma-separated list of user:password. These are generic IDs that get checked before checking LDAP
# (if enabled). ADMIN users have unrestricted access. WRITE users have access to POST and PUT either
# to specific indices or the default list of indices (this is configured separately). Examples
# provided.
elasticsearch.rest.security.auth.basic.admin : \
  admin:<password>\
  ,<user_1>:<password>
elasticsearch.rest.security.auth.basic.write : \
  logstash:<password>\
  ,kibana:<password>
# ==================================================================================================
# LDAP CONFIG
# ==================================================================================================
# Toggle LDAP by setting enabled to true or false. HTTP basic config is always checked before LDAP.
elasticsearch.rest.security.auth.ldap.config.enabled : false
elasticsearch.rest.security.auth.ldap.config.url : ldap://<ldap_host>:<ldap_port>
elasticsearch.rest.security.auth.ldap.config.user :
elasticsearch.rest.security.auth.ldap.config.password :
elasticsearch.rest.security.auth.ldap.config.base.dn : dc=<abc>,dc=<def>=dc=<ghi>
# --------------------------------------------------------------------------------------------------
# LDAP list of ADMIN users or groups, comma-separated.
# --------------------------------------------------------------------------------------------------
elasticsearch.rest.security.auth.ldap.admin.users : <some_ldap_admin_user>
elasticsearch.rest.security.auth.ldap.admin.groups : <some_ldap_admin_group>
# --------------------------------------------------------------------------------------------------
# LDAP list of WRTIE users or groups, comma-separated.
# --------------------------------------------------------------------------------------------------
elasticsearch.rest.security.auth.ldap.write.users : <some_ldap_write_user>
elasticsearch.rest.security.auth.ldap.write.groups : <some_ldap_write_group>
# ==================================================================================================
# DEFAULT INDEX WRITE ACCESS
# ==================================================================================================
# By default, if the user does not have explicit index access, as long as he has WRITE access then 
# he can access the below list of indices.
rest.security.auth.indices.default : /\\.kibana.*
# ==================================================================================================
# USER SPECIFIC INDEX WRITE ACCESS
# ==================================================================================================
# Explicit index access control per user. A user can be HTTP basic or LDAP. Use "all" to specify
# the user has write access to every index. Examples provided.
elasticsearch.rest.security.auth.indices.user.logstash : all
elasticsearch.rest.security.auth.indices.user.kibana : /\\.kibana.*